{"remainingRequest":"C:\\Users\\iduks\\Desktop\\gitIL\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\iduks\\Desktop\\gitIL\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\iduks\\Desktop\\gitIL\\client\\src\\services\\DownloadService.js","dependencies":[{"path":"C:\\Users\\iduks\\Desktop\\gitIL\\client\\src\\services\\DownloadService.js","mtime":1652633214944},{"path":"C:\\Users\\iduks\\Desktop\\gitIL\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651006994648},{"path":"C:\\Users\\iduks\\Desktop\\gitIL\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1651007003592},{"path":"C:\\Users\\iduks\\Desktop\\gitIL\\client\\node_modules\\eslint-loader\\index.js","mtime":1651006993127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2lkdWtzL0Rlc2t0b3AvZ2l0SUwvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9pZHVrcy9EZXNrdG9wL2dpdElML2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkM6L1VzZXJzL2lkdWtzL0Rlc2t0b3AvZ2l0SUwvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKCi8qIGVzbGludC1kaXNhYmxlICovCi8vIEB0cy1pZ25vcmUKaW1wb3J0IEZpbGVEb3dubG9hZCBmcm9tICJqcy1maWxlLWRvd25sb2FkIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0ICQgZnJvbSAianF1ZXJ5IjsKCnZhciBEb3dubG9hZFNlcnZpY2UgPSBmdW5jdGlvbiBEb3dubG9hZFNlcnZpY2UoKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERvd25sb2FkU2VydmljZSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZG93bmxvYWRTaW5nbGVGaWxlIiwgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHBpY2tlZEZpbGUpIHsKICAgICAgdmFyIGdldDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8v0LLRi9C30L7QsiDQstGL0LTQtdC70LXQvdC90YvRhSDRhNCw0LnQu9C+0LIKICAgICAgICAgICAgICBnZXQgPSBwaWNrZWRGaWxlOwogICAgICAgICAgICAgIGF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDo1MDAwL2Rvd25sb2FkIiwgewogICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAiYmxvYiIgLy8g0LHQuNC90LDRgNC90YvQtSDQtNCw0L3QvdGL0LUKCiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIEZpbGVEb3dubG9hZChyZXNwb25zZS5kYXRhLCBnZXQpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpOwoKICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJkb3dubG9hZE11bHRpcGxlIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC96aXAiLCB7CiAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAiYmxvYiIgLy8g0LHQuNC90LDRgNC90YvQtSDQtNCw0L3QvdGL0LUKCiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgRmlsZURvd25sb2FkKHJlc3BvbnNlLmRhdGEsIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSArICIuemlwIik7IC8v0LTQu9GPINC30LDQs9GA0YPQt9C60Lgg0L/QsNC/0LrQuCDQvtC90LAg0LDRgNGF0LjQstC40YDRg9C10YLRgdGPINGBINC90LDQt9Cy0LDQvdC40LXQvCAo0JTQsNGC0LAg0Lgg0LLRgNC10LzRjykKCiAgICAgICAgICAgICAgJCgiI2ZpbGVUYWJsZSBpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSkpOwp9OwoKZXhwb3J0IGRlZmF1bHQgRG93bmxvYWRTZXJ2aWNlOw=="},{"version":3,"sources":["C:/Users/iduks/Desktop/gitIL/client/src/services/DownloadService.js"],"names":["FileDownload","axios","$","DownloadService","pickedFile","get","responseType","then","response","data","catch","err","console","log","Date","toLocaleString","prop"],"mappings":";;;;;AAAA;AACA;AACA,OAAOA,YAAP,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,e;;;;uEACiB,iBAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB;AACIC,cAAAA,GAFe,GAETD,UAFS;AAGnBH,cAAAA,KAAK,CACFI,GADH,CACO,gCADP,EACyC;AACrCC,gBAAAA,YAAY,EAAE,MADuB,CACf;;AADe,eADzC,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClBR,gBAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAV,EAAgBJ,GAAhB,CAAZ;AACD,eANH,EAOGK,KAPH,CAOS,UAACC,GAAD,EAAS;AACdC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,eATH;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;iHAeF;AAAA;AAAA;AAAA;AAAA;AACjBV,YAAAA,KAAK,CACFI,GADH,CACO,2BADP,EACoC;AAChCC,cAAAA,YAAY,EAAE,MADkB,CACV;;AADU,aADpC,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClBR,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAV,EAAgB,IAAIK,IAAJ,GAAWC,cAAX,KAA8B,MAA9C,CAAZ,CADkB,CACiD;;AACnEb,cAAAA,CAAC,CAAC,2BAAD,CAAD,CAA+Bc,IAA/B,CAAoC,SAApC,EAA+C,KAA/C;AACD,aAPH,EAQGN,KARH,CAQS,UAACC,GAAD,EAAS;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,aAVH;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;AAerB,eAAeR,eAAf","sourcesContent":["/* eslint-disable */\r\n// @ts-ignore\r\nimport FileDownload from \"js-file-download\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\nclass DownloadService {\r\n  downloadSingleFile = async function(pickedFile) {\r\n    //вызов выделенных файлов\r\n    var get = pickedFile;\r\n    axios\r\n      .get(\"http://localhost:5000/download\", {\r\n        responseType: \"blob\", // бинарные данные\r\n      })\r\n      .then((response) => {\r\n        FileDownload(response.data, get);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  downloadMultiple = async function() {\r\n    axios\r\n      .get(\"http://localhost:5000/zip\", {\r\n        responseType: \"blob\", // бинарные данные\r\n      })\r\n      .then((response) => {\r\n        FileDownload(response.data, new Date().toLocaleString() + \".zip\"); //для загрузки папки она архивируется с названием (Дата и время)\r\n        $(\"#fileTable input:checkbox\").prop(\"checked\", false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport default DownloadService;\r\n"]}]}